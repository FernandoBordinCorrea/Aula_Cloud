{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Aula_Cloud/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Configuração dinâmica para API base\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.94.131:5000/api';\n\n// Configurar axios com timeout e tratamento de erro global\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Interceptor para tratamento de erros\napi.interceptors.response.use(response => response, error => {\n  if (error.code === 'ECONNREFUSED') {\n    console.error('Não foi possível conectar ao servidor backend');\n    return Promise.reject(new Error('Servidor backend indisponível'));\n  }\n  return Promise.reject(error);\n});\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [backendStatus, setBackendStatus] = useState('checking');\n\n  // Verificar status do backend\n  const checkBackendStatus = async () => {\n    try {\n      await api.get('/health');\n      setBackendStatus('online');\n      setError('');\n    } catch (err) {\n      setBackendStatus('offline');\n      setError('Backend indisponível. Verifique a conexão.');\n      console.error('Erro de conexão com backend:', err);\n    }\n  };\n\n  // Buscar filmes\n  const searchMovies = async query => {\n    if (!query) return;\n    if (backendStatus === 'offline') {\n      await checkBackendStatus();\n      if (backendStatus === 'offline') return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await api.get('/movies/search', {\n        params: {\n          query\n        }\n      });\n      if (response.data.Search) {\n        setMovies(response.data.Search);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Erro ao buscar filmes');\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 0 || err.code === 'ECONNREFUSED') {\n        setBackendStatus('offline');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar filmes favoritos\n  const loadFavorites = async () => {\n    try {\n      const response = await api.get('/movies/favorites/all');\n      setFavorites(response.data);\n    } catch (err) {\n      var _err$response3;\n      console.error('Erro ao carregar favoritos:', err);\n      if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 0 || err.code === 'ECONNREFUSED') {\n        setBackendStatus('offline');\n      }\n    }\n  };\n\n  // Adicionar aos favoritos\n  const addToFavorites = async movie => {\n    try {\n      await api.post('/movies/favorites', {\n        imdb_id: movie.imdbID,\n        title: movie.Title,\n        year: movie.Year,\n        type: movie.Type,\n        poster: movie.Poster\n      });\n      loadFavorites();\n      alert('Filme adicionado aos favoritos!');\n    } catch (err) {\n      alert('Erro ao adicionar aos favoritos');\n    }\n  };\n\n  // Remover dos favoritos\n  const removeFromFavorites = async imdbId => {\n    try {\n      await api.delete(`/movies/favorites/${imdbId}`);\n      loadFavorites();\n      alert('Filme removido dos favoritos!');\n    } catch (err) {\n      alert('Erro ao remover dos favoritos');\n    }\n  };\n  useEffect(() => {\n    checkBackendStatus();\n    loadFavorites();\n\n    // Verificar status periodicamente\n    const interval = setInterval(checkBackendStatus, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFAC Movie Search App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator ${backendStatus}`,\n        children: [\"Backend: \", backendStatus === 'online' ? '✅ Online' : '❌ Offline']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Buscar filmes...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && searchMovies(searchQuery),\n          disabled: backendStatus === 'offline'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => searchMovies(searchQuery),\n          disabled: backendStatus === 'offline' || loading,\n          children: loading ? '⏳ Buscando...' : '🔍 Buscar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-grid\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster !== 'N/A' ? movie.Poster : '/placeholder-movie.png',\n            alt: movie.Title,\n            onError: e => {\n              e.target.src = '/placeholder-movie.png';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [movie.Year, \" \\u2022 \", movie.Type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addToFavorites(movie),\n            disabled: backendStatus === 'offline',\n            children: \"\\u2B50 Adicionar aos Favoritos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, movie.imdbID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"favorites-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2B50 Meus Filmes Favoritos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), backendStatus === 'offline' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"warning\",\n          children: \"Modo offline: Os favoritos n\\xE3o podem ser atualizados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites-grid\",\n          children: favorites.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"favorite-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.poster !== 'N/A' ? movie.poster : '/placeholder-movie.png',\n              alt: movie.title,\n              onError: e => {\n                e.target.src = '/placeholder-movie.png';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [movie.year, \" \\u2022 \", movie.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromFavorites(movie.imdb_id),\n              disabled: backendStatus === 'offline',\n              children: \"\\u274C Remover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, movie.imdb_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jM3+iy87fE7Y9VPvHG14jvWmEXI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","response","use","error","code","console","Promise","reject","Error","App","_s","searchQuery","setSearchQuery","movies","setMovies","favorites","setFavorites","loading","setLoading","setError","backendStatus","setBackendStatus","checkBackendStatus","get","err","searchMovies","query","params","data","Search","_err$response","_err$response$data","_err$response2","status","loadFavorites","_err$response3","addToFavorites","movie","post","imdb_id","imdbID","title","Title","year","Year","type","Type","poster","Poster","alert","removeFromFavorites","imdbId","delete","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onKeyPress","key","disabled","onClick","map","src","alt","onError","_c","$RefreshReg$"],"sources":["/home/fernando/Aula_Cloud/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n// Configuração dinâmica para API base\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.94.131:5000/api';\n\n// Configurar axios com timeout e tratamento de erro global\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n});\n\n// Interceptor para tratamento de erros\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ECONNREFUSED') {\n      console.error('Não foi possível conectar ao servidor backend');\n      return Promise.reject(new Error('Servidor backend indisponível'));\n    }\n    return Promise.reject(error);\n  }\n);\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [backendStatus, setBackendStatus] = useState('checking');\n\n  // Verificar status do backend\n  const checkBackendStatus = async () => {\n    try {\n      await api.get('/health');\n      setBackendStatus('online');\n      setError('');\n    } catch (err) {\n      setBackendStatus('offline');\n      setError('Backend indisponível. Verifique a conexão.');\n      console.error('Erro de conexão com backend:', err);\n    }\n  };\n\n  // Buscar filmes\n  const searchMovies = async (query) => {\n    if (!query) return;\n    \n    if (backendStatus === 'offline') {\n      await checkBackendStatus();\n      if (backendStatus === 'offline') return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      const response = await api.get('/movies/search', {\n        params: { query }\n      });\n      \n      if (response.data.Search) {\n        setMovies(response.data.Search);\n      }\n    } catch (err) {\n      setError(err.response?.data?.error || 'Erro ao buscar filmes');\n      if (err.response?.status === 0 || err.code === 'ECONNREFUSED') {\n        setBackendStatus('offline');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Carregar filmes favoritos\n  const loadFavorites = async () => {\n    try {\n      const response = await api.get('/movies/favorites/all');\n      setFavorites(response.data);\n    } catch (err) {\n      console.error('Erro ao carregar favoritos:', err);\n      if (err.response?.status === 0 || err.code === 'ECONNREFUSED') {\n        setBackendStatus('offline');\n      }\n    }\n  };\n\n  // Adicionar aos favoritos\n  const addToFavorites = async (movie) => {\n    try {\n      await api.post('/movies/favorites', {\n        imdb_id: movie.imdbID,\n        title: movie.Title,\n        year: movie.Year,\n        type: movie.Type,\n        poster: movie.Poster\n      });\n      \n      loadFavorites();\n      alert('Filme adicionado aos favoritos!');\n    } catch (err) {\n      alert('Erro ao adicionar aos favoritos');\n    }\n  };\n\n  // Remover dos favoritos\n  const removeFromFavorites = async (imdbId) => {\n    try {\n      await api.delete(`/movies/favorites/${imdbId}`);\n      loadFavorites();\n      alert('Filme removido dos favoritos!');\n    } catch (err) {\n      alert('Erro ao remover dos favoritos');\n    }\n  };\n\n  useEffect(() => {\n    checkBackendStatus();\n    loadFavorites();\n    \n    // Verificar status periodicamente\n    const interval = setInterval(checkBackendStatus, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🎬 Movie Search App</h1>\n        \n        {/* Indicador de status do backend */}\n        <div className={`status-indicator ${backendStatus}`}>\n          Backend: {backendStatus === 'online' ? '✅ Online' : '❌ Offline'}\n        </div>\n        \n        {/* Barra de pesquisa */}\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Buscar filmes...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && searchMovies(searchQuery)}\n            disabled={backendStatus === 'offline'}\n          />\n          <button \n            onClick={() => searchMovies(searchQuery)}\n            disabled={backendStatus === 'offline' || loading}\n          >\n            {loading ? '⏳ Buscando...' : '🔍 Buscar'}\n          </button>\n        </div>\n\n        {error && <div className=\"error\">{error}</div>}\n\n        {/* Resultados da busca */}\n        {loading && <div className=\"loading\">Carregando...</div>}\n        \n        <div className=\"movies-grid\">\n          {movies.map(movie => (\n            <div key={movie.imdbID} className=\"movie-card\">\n              <img \n                src={movie.Poster !== 'N/A' ? movie.Poster : '/placeholder-movie.png'} \n                alt={movie.Title}\n                onError={(e) => {\n                  e.target.src = '/placeholder-movie.png';\n                }}\n              />\n              <h3>{movie.Title}</h3>\n              <p>{movie.Year} • {movie.Type}</p>\n              <button \n                onClick={() => addToFavorites(movie)}\n                disabled={backendStatus === 'offline'}\n              >\n                ⭐ Adicionar aos Favoritos\n              </button>\n            </div>\n          ))}\n        </div>\n\n        {/* Lista de favoritos */}\n        <div className=\"favorites-section\">\n          <h2>⭐ Meus Filmes Favoritos</h2>\n          {backendStatus === 'offline' && (\n            <div className=\"warning\">\n              Modo offline: Os favoritos não podem ser atualizados\n            </div>\n          )}\n          <div className=\"favorites-grid\">\n            {favorites.map(movie => (\n              <div key={movie.imdb_id} className=\"favorite-card\">\n                <img \n                  src={movie.poster !== 'N/A' ? movie.poster : '/placeholder-movie.png'} \n                  alt={movie.title}\n                  onError={(e) => {\n                    e.target.src = '/placeholder-movie.png';\n                  }}\n                />\n                <h4>{movie.title}</h4>\n                <p>{movie.year} • {movie.type}</p>\n                <button \n                  onClick={() => removeFromFavorites(movie.imdb_id)}\n                  disabled={backendStatus === 'offline'}\n                >\n                  ❌ Remover\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}